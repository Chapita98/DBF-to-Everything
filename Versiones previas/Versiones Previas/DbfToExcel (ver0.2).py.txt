import tkinter as tk
from tkinter import messagebox
import dbfread
import pandas as pd
import os
import tkfilebrowser

def seleccionar_directorio_entrada():
    directorio = tkfilebrowser.askopendirname(title="Seleccionar directorio de entrada")
    if directorio:
        entrada_var.set(directorio)
        actualizar_lista_archivos()

def seleccionar_directorio_salida():
    directorio = tkfilebrowser.askopendirname(title="Seleccionar directorio de salida")
    if directorio:
        salida_var.set(directorio)

def actualizar_lista_archivos():
    directorio = entrada_var.get()
    if os.path.isdir(directorio):
        archivos_dbf = [f for f in os.listdir(directorio) if f.endswith('.dbf')]
        lista_archivos.delete(0, tk.END)
        for archivo in archivos_dbf:
            lista_archivos.insert(tk.END, archivo)

def convertir_archivos():
    directorio_entrada = entrada_var.get()
    directorio_salida = salida_var.get()
    if not directorio_entrada or not directorio_salida:
        messagebox.showerror("Error", "Por favor, selecciona ambos directorios.")
        return

    seleccionados = lista_archivos.curselection()
    if not seleccionados:
        messagebox.showerror("Error", "Por favor, selecciona al menos un archivo.")
        return

    # Crear la carpeta "salidas" si no existe
    carpeta_salidas = os.path.join(directorio_salida, "salidas")
    if not os.path.exists(carpeta_salidas):
        os.makedirs(carpeta_salidas)

    for index in seleccionados:
        archivo = lista_archivos.get(index)
        try:
            # Leer el archivo .dbf
            tabla = dbfread.DBF(os.path.join(directorio_entrada, archivo), encoding='latin1')
            df = pd.DataFrame(iter(tabla))
            # Generar nombre de salida
            nombre_salida = os.path.splitext(archivo)[0] + '.xlsx'
            ruta_salida = os.path.join(carpeta_salidas, nombre_salida)
            # Guardar en Excel
            df.to_excel(ruta_salida, index=False)
            print(f"Convertido: {ruta_salida}")
        except Exception as e:
            print(f"Error al procesar {archivo}: {e}")

    messagebox.showinfo("Éxito", "Archivos convertidos correctamente.")

# Crear la ventana principal
ventana = tk.Tk()
ventana.title("Convertir DBF a Excel")

# Variables para los directorios
entrada_var = tk.StringVar()
salida_var = tk.StringVar()

# Interfaz gráfica
tk.Label(ventana, text="Directorio de entrada:").pack(pady=5)
tk.Button(ventana, text="Seleccionar", command=seleccionar_directorio_entrada).pack(pady=5)
tk.Entry(ventana, textvariable=entrada_var, width=50).pack(pady=5)

tk.Label(ventana, text="Directorio de salida:").pack(pady=5)
tk.Button(ventana, text="Seleccionar", command=seleccionar_directorio_salida).pack(pady=5)
tk.Entry(ventana, textvariable=salida_var, width=50).pack(pady=5)

tk.Label(ventana, text="Archivos .dbf disponibles:").pack(pady=5)
lista_archivos = tk.Listbox(ventana, selectmode=tk.MULTIPLE, height=10)
lista_archivos.pack(pady=5)

tk.Button(ventana, text="Convertir seleccionados", command=convertir_archivos).pack(pady=10)

ventana.mainloop()